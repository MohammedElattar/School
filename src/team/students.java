/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package team;

import java.sql.*;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mohamed Attar
 */
public class students extends javax.swing.JFrame {

    private Connection c;
    private String user = "root";
    private String password = "";
    private String con = "jdbc:mysql://localhost:3306/school";

    /**
     * Creates new form students
     */
    public students() {
        initComponents();
        showStudents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        students_label = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        student_name = new javax.swing.JTextField();
        student_age = new javax.swing.JTextField();
        add_student_btn = new javax.swing.JButton();
        edit_student_btn = new javax.swing.JButton();
        delete_user_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        student_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        students_label.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        students_label.setText("Students Registration");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Actions");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Age");

        student_name.setText("Mohamed Attar");

        student_age.setText("20");

        add_student_btn.setText("Add");
        add_student_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_student_btnActionPerformed(evt);
            }
        });

        edit_student_btn.setText("Edit");
        edit_student_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_student_btnActionPerformed(evt);
            }
        });

        delete_user_btn.setText("Delete");
        delete_user_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_user_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(student_name)
                            .addComponent(student_age)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(add_student_btn)
                        .addGap(43, 43, 43)
                        .addComponent(edit_student_btn)
                        .addGap(58, 58, 58)
                        .addComponent(delete_user_btn)))
                .addContainerGap(64, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(student_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(student_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_student_btn)
                    .addComponent(edit_student_btn)
                    .addComponent(delete_user_btn))
                .addGap(30, 30, 30))
        );

        student_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Age"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        student_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                student_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(student_table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(students_label)
                .addGap(342, 342, 342))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(students_label, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 36, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void add_student_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_student_btnActionPerformed
        try {
            // Getting name , age values
            String name = student_name.getText();
            String age = student_age.getText();
            String msg = this.validate_inputs();
            if (!"".equals(msg)) {
                JOptionPane.showMessageDialog(this, msg);
            } else {
                Class.forName("com.mysql.cj.jdbc.Driver");

                // Get Connection
                this.c = DriverManager.getConnection(this.con, this.user, this.password);
                if (this.c != null) {
                    var stmt = this.c.prepareStatement("INSERT INTO students(name , age) VALUES (?,?)");
                    stmt.setString(1, name);
                    stmt.setString(2, age);
                    stmt.executeUpdate();
                    JOptionPane.showMessageDialog(this, "User added successfully");
                    student_name.setText("");
                    student_age.setText("");
                    this.showStudents();
                } else {
                    System.out.println("Connection failed");
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(students.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_add_student_btnActionPerformed
    private String validate_inputs() {
        String name = student_name.getText();
        String age = student_age.getText();
        if ("".equals(name)) {
            return "Name cannot be empty";
        } else if ("".equals(age)) {
            return "Age cannot be empty";
        }
        try {
            int tmp = Integer.parseInt(age);
            if (tmp <= 0) {
                return "Age must be greater than zero";
            }
        } catch (Exception e) {
            return "Age must be a valid number";
        }
        return "";
    }
    private void student_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_student_tableMouseClicked

        DefaultTableModel model = (DefaultTableModel) student_table.getModel();
        int selectedIndex = student_table.getSelectedRow();
        student_name.setText(model.getValueAt(selectedIndex, 1).toString());
        student_age.setText(model.getValueAt(selectedIndex, 2).toString());
    }//GEN-LAST:event_student_tableMouseClicked

    private void edit_student_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_student_btnActionPerformed
        // TODO add your handling code here:
        String name = student_name.getText();
        String age = student_age.getText();

        // Get selected row id
        DefaultTableModel model = (DefaultTableModel) student_table.getModel();
        int selectedIndex = student_table.getSelectedRow();
        if (selectedIndex == -1)
            JOptionPane.showMessageDialog(this, "You must select a row to modify");
        else {

            try {
                String msg = this.validate_inputs();
                if (!"".equals(msg)) {
                    JOptionPane.showMessageDialog(this, msg);
                } else {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    var stmt = c.prepareStatement("UPDATE students SET name=? , age=? WHERE id =?");
                    try {
                        stmt.setString(1, name);
                    } catch (SQLException ex) {
                        Logger.getLogger(students.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        stmt.setString(2, age);
                    } catch (SQLException ex) {
                        Logger.getLogger(students.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        stmt.setString(3, model.getValueAt(selectedIndex, 0).toString());
                    } catch (SQLException ex) {
                        Logger.getLogger(students.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    stmt.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Student updated successfully");
                    student_name.setText("");
                    student_age.setText("");
                    this.showStudents();
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(students.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(students.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_edit_student_btnActionPerformed

    private void delete_user_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_user_btnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) student_table.getModel();
        int selectedIndex = student_table.getSelectedRow();
        if (selectedIndex == -1)
            JOptionPane.showMessageDialog(this, "You must select row to delete it");
        else {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                var stmt = this.c.prepareStatement("DELETE FROM students WHERE id =?");
                stmt.setString(1, model.getValueAt(selectedIndex, 0).toString());
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Student deleted successfully");
                student_name.setText("");
                student_age.setText("");
                this.showStudents();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(students.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(students.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_delete_user_btnActionPerformed

    public void showStudents() {
        int x;
        try {
            this.c = DriverManager.getConnection(this.con, this.user, this.password);
            if (this.c != null) {
                var stmt = c.prepareStatement("SELECT * FROM students ORDER BY name ASC , id DESC");
                ResultSet results = stmt.executeQuery();
                ResultSetMetaData resultsInMetaData = results.getMetaData();
                x = resultsInMetaData.getColumnCount();
                DefaultTableModel DFT = (DefaultTableModel) this.student_table.getModel();
                DFT.setRowCount(0);
                while (results.next()) {
                    var vc = new Vector();
                    for (int i = 0; i < x; i++) {
                        vc.add(results.getString("id"));
                        vc.add(results.getString("name"));
                        vc.add(results.getInt("age"));
                    }
                    DFT.addRow(vc);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Connection failed");
            }
        } catch (SQLException ex) {
            Logger.getLogger(students.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new students().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_student_btn;
    private javax.swing.JButton delete_user_btn;
    private javax.swing.JButton edit_student_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField student_age;
    private javax.swing.JTextField student_name;
    private javax.swing.JTable student_table;
    private javax.swing.JLabel students_label;
    // End of variables declaration//GEN-END:variables
}
